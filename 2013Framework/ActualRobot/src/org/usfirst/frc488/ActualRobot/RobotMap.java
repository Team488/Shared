// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc488.ActualRobot;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import xbot.common.actualrobot.RPMCounter;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Compressor actuatorsCompressor;
    public static Solenoid actuatorsBucketSolenoid;
    public static SpeedController actuatorsLeftFrontController;
    public static SpeedController actuatorsLeftRearController;
    public static SpeedController actuatorsRightFrontController;
    public static SpeedController actuatorsRightRearController;
    public static Solenoid actuatorsFingerSolenoid;
    public static SpeedController actuatorsCollectorSpeedController;
    public static SpeedController actuatorsInnerShooterSpeedController;
    public static SpeedController actuatorsOuterShooterSpeedController;
    public static DigitalInput sensorsFingerRetractedLimitSwitch;
    public static DigitalInput sensorsBucketUpLimitSwitch;
    public static DigitalInput sensorsBucketDownLimitSwitch;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static RPMCounter sensorsOuterShooterWheelTach;
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        actuatorsCompressor = new Compressor(1, 11, 1, 1);
	
        
        actuatorsBucketSolenoid = new Solenoid(1, 1);
	LiveWindow.addActuator("Actuators", "BucketSolenoid", actuatorsBucketSolenoid);
        
        actuatorsLeftFrontController = new Victor(1, 1);
	LiveWindow.addActuator("Actuators", "LeftFrontController", (Victor) actuatorsLeftFrontController);
        
        actuatorsLeftRearController = new Victor(1, 2);
	LiveWindow.addActuator("Actuators", "LeftRearController", (Victor) actuatorsLeftRearController);
        
        actuatorsRightFrontController = new Victor(1, 3);
	LiveWindow.addActuator("Actuators", "RightFrontController", (Victor) actuatorsRightFrontController);
        
        actuatorsRightRearController = new Victor(1, 4);
	LiveWindow.addActuator("Actuators", "RightRearController", (Victor) actuatorsRightRearController);
        
        actuatorsFingerSolenoid = new Solenoid(1, 2);
	LiveWindow.addActuator("Actuators", "FingerSolenoid", actuatorsFingerSolenoid);
        
        actuatorsCollectorSpeedController = new Victor(1, 5);
	LiveWindow.addActuator("Actuators", "CollectorSpeedController", (Victor) actuatorsCollectorSpeedController);
        
        actuatorsInnerShooterSpeedController = new Victor(1, 6);
	LiveWindow.addActuator("Actuators", "InnerShooterSpeedController", (Victor) actuatorsInnerShooterSpeedController);
        
        actuatorsOuterShooterSpeedController = new Victor(1, 7);
	LiveWindow.addActuator("Actuators", "OuterShooterSpeedController", (Victor) actuatorsOuterShooterSpeedController);
        
        sensorsFingerRetractedLimitSwitch = new DigitalInput(1, 1);
	LiveWindow.addSensor("Sensors", "FingerRetractedLimitSwitch", sensorsFingerRetractedLimitSwitch);
        
        sensorsBucketUpLimitSwitch = new DigitalInput(1, 2);
	LiveWindow.addSensor("Sensors", "BucketUpLimitSwitch", sensorsBucketUpLimitSwitch);
        
        sensorsBucketDownLimitSwitch = new DigitalInput(1, 3);
	LiveWindow.addSensor("Sensors", "BucketDownLimitSwitch", sensorsBucketDownLimitSwitch);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        sensorsOuterShooterWheelTach = new RPMCounter(1, 11);
	LiveWindow.addSensor("Sensors", "OuterShooterWheelTach", sensorsOuterShooterWheelTach);
    }
}
